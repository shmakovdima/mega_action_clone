mongoose     = require 'mongoose'
config       = require "./config.json"
moment       = require "moment"

names = [
  "Евтухова Алиса"
  "Железнева Дина"
  "Иванова Оксана"
  "Панько Виктория"
  "Вардерисян Айк"
  "Евтухов Кирилл"
  "Гарматин Алексей"
  "Онищенко Карина"
  "Искандарова Оксана"
  "Евтухов Кирилл"
  "Евтухова Любовь"
  "Боглаенко Илья"
  "Пышнограев Сергей"
  "Авсаджанешвили Павел"
  "Донец Дарья"
  "Прасол Сергей"
  "Волочек Виктория"
  "Сергеева Александра"
  "Евтухов Евгений"
  "Велигуров Игорь"
  "Велигурова Яна"
  "Васильева Полина"
  "Авсаджанишвили Павел"
  "Шевченко Татьяна"
  "Васильева Полина"
  "Буниатян Нуне"
  "Паньно Виктория"
  "Мусиенко Виктория"
  "Евтухов Алексей"
  "Баринов Виталий"
  "Абрагимович Дмитрий"
  "Сапожникова Нина"
  "Петровец Дарья"
  "Зорина Марина"
  "Сергеева Светлана"
  "Донец Дарья"
  "Васильева Полина"
  "Евтухов Евгений"
  "Волочек Антонина"
  "Волочек Антонина"
  "Сапожникова Татьяна"
  "Правил сергей"
  "Максимова Лидия"
  "Шкарина Светлана"
  "Железнева Дина"
  "Гаджимурадова Ксения"
  "Запорожцева Виктория"
  "Бондаренко Игорь"
  "Шкарина Светлана"
  "Баринова Светлана"
  "Алиева Гулизар"
  "Волочек Виктория"
  "Маляр Андрей"
  "Скачкова Анастасия"
  "Сапожникова Нина"
  "Ковалева Светлана"
  "Буниатян Нуне"
  "Железнева Дина"
  "Зорина Марина"
  "Егоренкова Татьяна"
  "Шарова Оксана"
  "Гаджимураева Ксения"
  "Мусиенко Виктория"
  "Ермоленко Марина"
  "Федоренко Кирилл"
  "Гаджимурадова Ксения"
  "Пышнограев Сергей"
  "Гаджимурадова Ксения"
  "Сергеева Александра"
  "Федоренко Кирилл"
  "Линько Ольга"
  "Котенкова Екатерина"
  "Авсаджанешвили Павел"
  "Новатова Татьяна"
  "Гетманова Виктория"
  "Сапожникова Нина"
  "Баринова Светлана"
  "Котенкова Екатерина"
  "Егоренкова Татьяна"
  "Железнева Дина"
  "Велигуров Игорь"
  "Шевченко Татьяна"
  "Ковалева Светлана"
  "Скачкова Анастасия"
  "Гетманова Виктория"
  "Железнева Дина"
]
cards = [
  2100511984689
  2100514765780
  2100515308245
  2100517237345
  2100517744201
  2100518062014
  2100518552843
  2100518833584
  2100518926323
  2100519479699
  2100520314118
  2100521883996
  2100522147288
  2100523301566
  2100524457149
  2100524933001
  2100525688696
  2100526735207
  2100528516231
  2100532031669
  2100533058702
  2100533654072
  2100533785592
  2100534204863
  2100535023098
  2100535062813
  2100535086550
  2100537741990
  2100539333025
  2100539346063
  2100542137481
  2100542915928
  2100543709168
  2100544488598
  2100545250781
  2100545532979
  2100546417220
  2100546525574
  2100546532114
  2100547975675
  2100549101690
  2100549987782
  2100551395186
  2100553484529
  2100553552259
  2100556088991
  2100557400716
  2100558360828
  2100558948699
  2100560497420
  2100560557308
  2100561665798
  2100561705708
  2100562930857
  2100563392838
  2100565440155
  2100566447023
  2100566693550
  2100566801122
  2100566961758
  2100567587650
  2100567644384
  2100570173413
  2100571309941
  2100573528005
  2100576084003
  2100577156204
  2100577164018
  2100577768216
  2100578727526
  2100580327066
  2100581258468
  2100582009885
  2100583125423
  2100584747433
  2100586402934
  2100586965392
  2100588216416
  2100588619590
  2100589019221
  2100589985052
  2100591142405
  2100591161796
  2100593194105
  2100593791359
  2100598416851
]
phones = [
  "+79045095879"
  "+79184520542"
  "+79282147229"
  "+79515092668"
  "+79885742956"
  "+79045013407"
  "+79185367006"
  "+79061850056"
  "+79282891420"
  "+79045013407"
  "+79081775517"
  "+79515384399"
  "+79034893085"
  "+79001325662"
  "+79185151336"
  "+79034505992"
  "+79281298079"
  "+79185742207"
  "+79518328800"
  "+79882569222"
  "+79054306768"
  "+79198741416"
  "+79001325662"
  "+79889937996"
  "+79198741416"
  "+79045055598"
  "+79515092668"
  "+79614135813"
  "+79045006999"
  "+79281707786"
  "+79185398493"
  "+79081965002"
  "+79054508871"
  "+79085079765"
  "+79044498404"
  "+79185151336"
  "+79198741416"
  "+79518328880"
  "+79518265774"
  "+79518265774"
  "+79081965002"
  "+79034505992"
  "+79185570940"
  "+79885397906"
  "+79184520542"
  "+79896191950"
  "+79504525421"
  "+79515384399"
  "+79885397906"
  "+79034312974"
  "+79888982159"
  "+79281298079"
  "+79895040106"
  "+79612683003"
  "+79081965002"
  "+79612710551"
  "+79045055598"
  "+79184520542"
  "+79085079765"
  "+79614138033"
  "+79885708622"
  "+79896191950"
  "+79614135813"
  "+79094591050"
  "+79604617922"
  "+79896191905"
  "+79034893085"
  "+79896191950"
  "+79185742207"
  "+79604617922"
  "+79044412812"
  "+79198920708"
  "+79001325662"
  "+79094241512"
  "+79064214651"
  "+79081965002"
  "+79034312974"
  "+79198920708"
  "+79614138033"
  "+79184520542"
  "+79882569222"
  "+79889937996"
  "+79612710551"
  "+79612683003"
  "+79064214651"
  "+79184520542"
  "+79604617922"
  "+79045095879"
]

created_at = [
  "13/03/2016"
  "12/03/2016"
  "12/03/2016"
  "13/03/2016"
  "14/03/2016"
  "13/03/2016"
  "13/03/2016"
  "14/03/2016"
  "12/03/2016"
  "13/03/2016"
  "13/03/2016"
  "13/03/2016"
  "13/03/2016"
  "14/06/2016"
  "12/03/2016"
  "14/03/2016"
  "12/03/2016"
  "12/03/2016"
  "13/03/2016"
  "10/03/2016"
  "10/03/2016"
  "13/03/2016"
  "13/03/2016"
  "14/03/2016"
  "14/03/2016"
  "14/03/2016"
  "13/03/2016"
  "12/03/2016"
  "13/03/2016"
  "14/03/2016"
  "14/03/2016"
  "12/03/2016"
  "12/03/2016"
  "14/03/2016"
  "12/03/2016"
  "12/03/2016"
  "13/03/2016"
  "13/03/2016"
  "12/03/2016"
  "12/03/2016"
  "12/03/2016"
  "14/05/2016"
  "14/03/2016"
  "13/03/2016"
  "13/03/2016"
  "15/03/2016"
  "12/03/2016"
  "12/03/2016"
  "14/03/2016"
  "14/03/2016"
  "13/03/2016"
  "10/03/2016"
  "12/03/2016"
  "13/03/2016"
  "12/03/2016"
  "12/03/2016"
  "14/03/2016"
  "14/03/2016"
  "14/03/2016"
  "12/03/2016"
  "14/03/2016"
  "13/03/2016"
  "12/03/2016"
  "12/03/2016"
  "12/03/2016"
  "15/03/2016"
  "13/03/2016"
  "13/03/2016"
  "12/03/2016"
  "13/03/2016"
  "12/03/2016"
  "14/03/2016"
  "14/03/2016"
  "14/03/2016"
  "12/03/2016"
  "10/03/2016"
  "14/03/2016"
  "14/03/2016"
  "10/03/2016"
  "13/03/2016"
  "10/03/2016"
  "14/03/2016"
  "12/03/2016"
  "13/03/2016"
  "13/03/2016"
  "12/03/2016"
  "12/03/2016"
  "13/06/2016"
]

# database connection
mongoose.connect(config.db.path + config.db.name)
db = mongoose.connection

db.on 'error', (err)->
  console.log "Error connection to database: ", err
db.once 'open', ()->
  console.log "Connected to db!"

  # Schemas loading
  PreRegisterModel = require('./schemas/preregister.coffee').get mongoose
  CardModel = require('./schemas/cards.coffee').get mongoose
  TransactionsModel = require('./schemas/transactions.coffee').get mongoose

  createPreregister = (lname, fname, phone, created_at, cb)->
    model = new PreRegisterModel
      fname: fname
      lname: lname
      mega: 11
      phone: phone
      created_at: moment(created_at, "DD/MM/YYYY").format()
    model.save (err, m)->
      console.log if !err then ("Successfully created user " + fname + " " + lname + " " + phone + " record!") else err
      cb(m, model)

  createCard = (number, recipient, cb)->
    model = new CardModel
      number: number
      owner: 11
      recipient: recipient
      is_active: false
    model.save (err, m)->
      console.log if !err then ("Successfully created card " + number + " record!") else err
      cb(m, model)

  createTransactions = (user_id, card_number, cb)->
    model = new TransactionsModel
      owner: user_id
      sum: 250
      card_number: card_number
      mega: 11
      whos: "mega_ro"
      created_at: new Date()
    model.save (err, m)->
      console.log if !err then ("Successfully created transaction " + user_id + " " + card_number + " record!") else err
      cb(m, model)

  getPreregister = (name, phone, created_at, cb)->
    PreRegisterModel.findOne {phone: phone}, (err, pr)->
      if !pr
        console.log "User " + phone + " is not found!"
        # arr = name.split " "
        # console.log arr
        # createPreregister arr[0], arr[1], phone, created_at, (p, prereg)->
        #   cb p, prereg
      else
        console.log "User " + phone + " is found!"
        cb pr, pr

  getCard = (number, prereg, cb)->
      CardModel.findOne {number: number}, (err, f_card)->
        if !f_card
          console.log "Card " + number + " is not found!"
          createCard number, prereg._id, (card_data, card_model)->
            cb card_data, card_model, false
        else
          if f_card.is_active
            console.log "Card " + number + " is found and active!"
            f_card.is_active = false
            f_card.save ()->
              console.log "Card " + number + " is found and not active now!"
              cb f_card, f_card, false
          else
            console.log "Card " + number + " is found and not active!"
            cb f_card, f_card, true
  users_iterator = (name, card, phone, created_at)->
    getPreregister name, phone, created_at, (p, prereg)->
      getCard card, prereg, (card_data, card_model, was_active)->
        if !was_active
          real_balance = prereg.balance
          real_balance -= t.sum for t in prereg.transactions
          if real_balance >= 250
            console.log "Balance of user " + phone + " is enough! Balance before transaction is: " + real_balance
            createTransactions prereg._id, card_model.number, (tr_data)->
              prereg.transactions.push tr_data
              prereg.save (err)->
                console.log if !err then ("Successfully add transaction " + card_model.number + " to " + prereg.fname + " " + prereg.lname + " record! Current balance is " + real_balance) else err
          else
            console.log "Balance of user " + phone + " is not enough! Balance is: " + real_balance
        else
          console.log "Card " + card + " already linked to user " + phone

  for i, phone of phones
    users_iterator names[i], cards[i], phones[i], created_at[i]